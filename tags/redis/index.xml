<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on ArBlog</title>
    <link>https://arboat.github.io/tags/redis/</link>
    <description>Recent content in redis on ArBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 May 2020 00:00:01 +0000</lastBuildDate>
    
	<atom:link href="https://arboat.github.io/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>redis note</title>
      <link>https://arboat.github.io/posts/redis/</link>
      <pubDate>Fri, 01 May 2020 00:00:01 +0000</pubDate>
      
      <guid>https://arboat.github.io/posts/redis/</guid>
      <description>特点及基本结构   高性能， 高可靠， 高可扩展
  五种主要结构
 string : int, raw, embstr list: ziplist + linkedlist hash: ziplist + hashtable zset: ziplist + skiplist set: hashtable + inset    redis 单线程读写指对网络io和数据读写用一个线程，避免多线程并发的控制问题，多路复用模型
  备份有rdb和aof两种:
    aof 三种写回机制always ，evevrysec，no ，日志重写不会阻塞，// 恢复慢
  rdb snapshot 恢复快 bgsave copy-on-write（fork子进程），增量快照 //数据丢失
  主从同步
  哨兵机制
  string开销大
   redis消息队列： 消息保序，处理重复消息，保证消息可靠性   加锁和原子操作， 原子操作有限， 分布式锁： 单节点用一个key来当锁， redlock 事务： multi exec ，discard watch ， 能保证一致性和隔离性， 不能保证持久性， 命令语法没问题时可以保证  一致性， 雪崩，击穿，穿透   一致性:</description>
    </item>
    
  </channel>
</rss>