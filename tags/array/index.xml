<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>array on ArBlog</title>
    <link>https://blog.arboat.top/tags/array/</link>
    <description>Recent content in array on ArBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 May 2020 00:00:03 +0800</lastBuildDate>
    
	<atom:link href="https://blog.arboat.top/tags/array/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>70.Climbing Stairs</title>
      <link>https://blog.arboat.top/posts/leetcode-70.climbing-stairs/</link>
      <pubDate>Fri, 01 May 2020 00:00:03 +0800</pubDate>
      
      <guid>https://blog.arboat.top/posts/leetcode-70.climbing-stairs/</guid>
      <description>分析可得本题为Fibonacci sequence
用通项公式：
 时间复杂度：O(log n) 空间复杂度：O(1)  用动态规划（滑动数组):
 时间复杂度：O(n) 空间复杂度：O(1)  Go:
func climbStairs(n int) int { p,q,r:=1,1,1 for i:=2 ; i&amp;lt;=n ;i++ { p = q q = r r = p + q } return r }  Python:
class Solution: def climbStairs(self, n: int) -&amp;gt; int: p,q,r=1,1,1 i = 2 while i&amp;lt;=n: p=q q=r r=p+q i+=1 return r </description>
    </item>
    
  </channel>
</rss>